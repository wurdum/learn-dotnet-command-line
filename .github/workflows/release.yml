name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write  # Allows creating releases and uploading assets

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64
          - os: macos-latest
            rid: osx-x64
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool

      - name: Determine version
        id: gitversion
        run: echo "::set-output name=FullSemVer::$(dotnet-gitversion /output json /showvariable FullSemVer)"

      - name: Build
        run: dotnet publish ./learn-dotnet-command-line.csproj -c Release -r ${{ matrix.rid }} --self-contained -p:PublishAot=true -p:Version=${{ steps.gitversion.outputs.FullSemVer }} -o ./publish

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ldcl-${{ matrix.rid }}
          path: ./publish/ldcl*

  create_release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.FullSemVer }}
          release_name: Release ${{ needs.build.outputs.FullSemVer }}
          draft: false
          prerelease: true

  publish_assets:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        rid: [linux-x64, win-x64, osx-x64]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ldcl-${{ matrix.rid }}
          path: ./publish

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./publish/ldcl${{ matrix.rid == 'win-x64' && '.exe' || '' }}
          asset_name: ldcl-${{ matrix.rid }}${{ matrix.rid == 'win-x64' && '.exe' || '' }}
          asset_content_type: application/octet-stream
